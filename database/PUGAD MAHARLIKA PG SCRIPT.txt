CREATE TABLE ACCOUNT (
    ACC_ID SERIAL PRIMARY KEY,
    ACC_FNAME VARCHAR(50) NOT NULL,
    ACC_MNAME VARCHAR(50),
    ACC_LNAME VARCHAR(50) NOT NULL,
    ACC_USERNAME VARCHAR(50) NOT NULL,
    ACC_EMAIL VARCHAR(100) NOT NULL,
    ACC_PASSWORD VARCHAR(150) NOT NULL,
    ACC_GENDER VARCHAR(6),
    ACC_SALT VARCHAR(100),
    ACC_PROFILE BYTEA,
    ACC_DOB DATE,
    ACC_REGION VARCHAR(50),
    ACC_PROVINCE VARCHAR(50),
    ACC_STATUS VARCHAR(20),
    ACC_TYPE VARCHAR(1) DEFAULT 'P',
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE BALANCE (
    BLN_ID SERIAL PRIMARY KEY,
    BLN_AMOUNT NUMERIC(12,2),
    BLN_TOTAL NUMERIC(12,2),
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);


CREATE TABLE PROGRESS (
    PRG_ID SERIAL PRIMARY KEY,
    PRG_HISTORY VARCHAR(20) NOT NULL,
    PRG_QUEST VARCHAR(20) NOT NULL,
    PRG_WINS INT DEFAULT 0,
    PRG_LOSSES INT DEFAULT 0,
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);


CREATE TABLE ITEM (
    ITEM_ID SERIAL PRIMARY KEY,
    ITEM_NAME VARCHAR(50) NOT NULL,
    ITEM_SPRITE BYTEA,
    ITEM_HOLDER VARCHAR(20) NOT NULL,
    ITEM_VALUE NUMERIC(12,2) NOT NULL,
    ITEM_TYPE VARCHAR(1) NOT NULL,
    ITEM_STATUS VARCHAR(20),
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE INVENTORY (
    INV_ID SERIAL PRIMARY KEY,
    ACC_ID INT NOT NULL,
    ITEM_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID),
    FOREIGN KEY (ITEM_ID) REFERENCES ITEM (ITEM_ID)
);

CREATE TABLE OFFER (
    OFR_ID SERIAL PRIMARY KEY,
    OFR_NAME VARCHAR(50) NOT NULL,
    OFR_VALUE NUMERIC(12,2) NOT NULL,
    OFR_PRICE NUMERIC(12,2) NOT NULL,
    OFR_SPRITE BYTEA,
    OFR_DESC VARCHAR(50),
    OFR_STATUS VARCHAR(20),
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE NOTIFICATION (
    NTF_ID SERIAL PRIMARY KEY,
    NTF_TITLE VARCHAR(20) NOT NULL,
    NTF_MESSAGE VARCHAR(50) NOT NULL,
    NTF_TYPE VARCHAR(1) DEFAULT 'G',
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    DATE_UPDATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);

CREATE TABLE HISTORY (
    HIS_ID SERIAL PRIMARY KEY,
    HIS_MODE VARCHAR(20),
    HIS_TYPE VARCHAR(20),
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    OFR_ID INT REFERENCES OFFER(OFR_ID),
    ITEM_ID INT REFERENCES ITEM(ITEM_ID),
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);
CREATE TABLE USERLOG (
    LOG_ID SERIAL PRIMARY KEY,
    LOG_TYPE VARCHAR(20) NOT NULL,
    LOG_ORIGIN VARCHAR(20) NOT NULL,
    LOG_DESCRIPTION VARCHAR(20) NOT NULL,
    LOG_IP_ADDRESS VARCHAR(20),
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);

CREATE TABLE FEEDBACK (
    FDBK_ID SERIAL PRIMARY KEY,
    FDBK_TYPE VARCHAR(20) NOT NULL,
    FDBK_TITLE VARCHAR(50) NOT NULL,
    FDBK_MESSAGE VARCHAR(100) NOT NULL,
    DATE_CREATED TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    ACC_ID INT NOT NULL,
    FOREIGN KEY (ACC_ID) REFERENCES ACCOUNT (ACC_ID)
);


